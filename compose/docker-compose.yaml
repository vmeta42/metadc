# This compose file defines a single validator node test network,
# along with a faucet that connects to it over json-rpc.
# In addition, it offers the following facilities:
# * JSON-RPC endpoint at http://127.0.0.1:8080.
# * chain_id of 4 / TESTING
# * The faucet can be accessed at 127.0.0.1:8000

# Additional information:
# * If you use this compose for different Diem Networks, you will need remove the db volume first.
# * If you would like to use the current Diem version within this repository, execute the
#     `build.sh` in `docker/validator` and change the image tag below to diem_e2e:latest
# * Validator images can be found at https://hub.docker.com/r/devnet/validator/tags
# * Faucet images can be found at https://hub.docker.com/r/devnet/faucet/tags

# Monitoring:
# If you want to install the monitoring components for your validator-testnet
# you can symlink the ../monitoring folder into this directory.
# Note that you will need to rename the monitoring docker-compose.yaml file to avoid duplication.
# e.g. rename it to docker-compose.mon.yaml
# You will also need to configure the network in the monitoring compose file,
# so that the container can join the same network and talk to each other.
# To start both validator and monitoring, run `docker-compose -f docker-compose.yaml -f docker-compose.mon.yaml up -d`

version: "3.2"
services:
  validator:
    # Note this image currently does not support this, will update to the appropriate minimum
    # version shortly
    image: "meta42/violas-validator:v0.11.0"
    volumes:
      - ../violas/etc:/opt/diem/etc
    command:
      [
        "/opt/diem/bin/diem-node",
        "--config",
        "/opt/diem/etc/0/node.yaml"
      ]
    networks:
      violas:
        ipv4_address: 172.18.0.10
    ports:
      - "50001:50001"
  validator1:
    # Note this image currently does not support this, will update to the appropriate minimum
    # version shortly
    image: "meta42/violas-validator:v0.11.0"
    volumes:
      - ../violas/etc:/opt/diem/etc
    command:
      [
        "/opt/diem/bin/diem-node",
        "--config",
        "/opt/diem/etc/1/node.yaml"
      ]
    networks:
      violas:
        ipv4_address: 172.18.0.11
    ports:
      - "50002:50001"
  validator2:
    # Note this image currently does not support this, will update to the appropriate minimum
    # version shortly
    image: "meta42/violas-validator:v0.11.0"
    volumes:
      - ../violas/etc:/opt/diem/etc
    command:
      [
        "/opt/diem/bin/diem-node",
        "--config",
        "/opt/diem/etc/2/node.yaml"
      ]
    networks:
      violas:
        ipv4_address: 172.18.0.12
    ports:
      - "50003:50001"
  validator3:
    # Note this image currently does not support this, will update to the appropriate minimum
    # version shortly
    image: "meta42/violas-validator:v0.11.0"
    volumes:
      - ../violas/etc:/opt/diem/etc
    command:
      [
        "/opt/diem/bin/diem-node",
        "--config",
        "/opt/diem/etc/3/node.yaml"
      ]
    networks:
      violas:
        ipv4_address: 172.18.0.13
    ports:
      - "50004:50001"
  init-chain:
    environment:
      - CHAIN_ENV=http://172.18.0.10:50001
    image: "meta42/metatoc-webservice:latest"
    volumes:
      - ../violas/etc:/usr/src/app/diem-share
    command: [ "flask", "--app", "flaskr", "init-chain" ]
    networks:
      violas:
        ipv4_address: 172.18.0.14
    depends_on:
      - validator
  WebService:
    environment:
      - CHAIN_ENV=http://172.18.0.10:50001
    image: "meta42/metatoc-webservice:latest"
    volumes:
      - ../violas/etc:/usr/src/app/diem-share
    ports:
      - "5000:5000"
    networks:
      violas:
        ipv4_address: 172.18.0.15
    depends_on:
      - init-chain
  metatoc-ui-chatgpt-proxy:
    image: meta42/metatoc-ui-chatgpt-proxy:latest
    environment:
      - API_KEY=API_KEY
      - PROXY_URL=PROXY_URL
    expose:
      - "3001"
    networks:
      violas:
        ipv4_address: 172.18.0.16
  minio:
    image: minio/minio
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - ../minio/data:/data
      - ../minio/config:/root/.minio
    expose:
      - "9000"
    command: [ "server", "/data" ]
    networks:
      violas:
        ipv4_address: 172.18.0.17
  metatoc-webservice-for-ui:
    image: meta42/metatoc-webservice-for-ui:latest
    environment:
      - MINIO_ENDPOINT=minio:9000
      - BLOCKCHAIN_WEBSERVICE_ADDRESS=http://WebService:5000
    ports:
      - "8080:8080"
    networks:
      violas:
        ipv4_address: 172.18.0.18
    depends_on:
      - minio
  metatoc-ui:
    image: meta42/metatoc-ui:latest
    environment:
      - chatgpt_service_proxy_pass=http://metatoc-ui-chatgpt-proxy:3001
      - blockchain_service_proxy_pass=http://WebService:5000
      - metatoc_service_proxy_pass=http://metatoc-webservice-for-ui:8080
    ports:
      - "80:80"
    networks:
      violas:
        ipv4_address: 172.18.0.19
    depends_on:
      - WebService
      - metatoc-ui-chatgpt-proxy
      - metatoc-webservice-for-ui
networks:
  violas:
    ipam:
      config:
        - subnet: 172.18.0.0/24
